.catalog:
  name: Drone
  version: "v0.0.1"
  description: |
    Drone CI Server
  uuid: droneci-0
  minimum_rancher_version: v0.51.0
  questions:
    - variable: remote_driver
      type: "enum"
      required: true
      label: "Remote Driver"
      description: "Remote Git and Auth scheme"
      options:
        - github
        - bitbucket
        - gitlab
        - gogs
    - variable: remote_config
      type: "password"
      required: true
      label: "Remote Config"
      description: "Must be the full connection string. see http://readme.drone.io/setup/overview/ for more info"
    - variable: public_port
      type: "int"
      required: true
      default: "9999"
      label: "Public Port"
      description: "Port that the load balancer will listen on. Must be accessible to remote driver for webhooks"
    - variable: database_driver
      type: "string"
      label: "Database Driver"
      description: "Database backend to use."
      required: true
      default: "mysql"
    - variable: database_config
      label: "Database Config"
      type: "string"
      required: true
      default: "root:secret@tcp(mysql:3306)/drone?parseTime=true"
      description: "Must be full db string. The hostname for the DB will be 'database'. See http://readme.drone.io/setup/overview/ for more info"
    - variable: mysql_root_password
      description: "MySQL Root Password"
      label: "MySQL Root Password"
      required: true
      default: "secret"
      type: "string"
    - variable: mysql_database
      description: "MySQL database"
      label: "Mysql Database"
      required: true
      default: "drone-ci"
      type: "string
drone-lb:
  scale: 1
  load_balancer_config:
    haproxy_config: {}
  health_check:
    port: 42
    interval: 2000
    unhealthy_threshold: 3
    healthy_threshold: 2
    response_timeout: 2000
drone-server:
  scale: 1
  metadata:
    remote_driver: ${remote_driver}
    remote_config: "${remote_config}"
    database_driver: ${database_driver}
    database_config: "${database_config}"
    http_proxy_on: "false"
    debug: "true"
  health_check:
    port: 1620
    interval: 2000
    unhealthy_threshold: 3
    strategy: recreate
    request_line: GET /ping HTTP/1.0
    healthy_threshold: 2
    response_timeout: 2000
